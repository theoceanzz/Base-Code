// <auto-generated />
using System;
using FINAL_INTERN.Models.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FINAL_INTERN.Data.Migrations
{
    [DbContext(typeof(finalInternDbContext))]
    [Migration("20241105034350_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FINAL_INTERN.Models.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alt");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("img");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("Role_ID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Accounts__3214EC2721221F77");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.CarInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alt");

                    b.Property<int?>("CategoriesOfCarId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriesOfCar_ID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("img");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("StockQuantit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.Property<string>("Transmission")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Years")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__CarInfos__3214EC27A1D9C638");

                    b.HasIndex("CategoriesOfCarId");

                    b.ToTable("CarInfos");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.CategoriesOfCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Categori__3214EC27DBCA6BBE");

                    b.ToTable("CategoriesOfCar");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("Account_ID");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("NameOfCustomer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC27A35FB73B");

                    b.HasIndex("AccountId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("Account_ID");

                    b.Property<int?>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("Car_ID");

                    b.Property<string>("NameOfCar")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_ID");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<double?>("Total")
                        .HasColumnType("float")
                        .HasColumnName("total");

                    b.HasKey("Id")
                        .HasName("PK__OrderDet__3214EC272D446259");

                    b.HasIndex("AccountId");

                    b.HasIndex("CarId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("NameOfRole")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC278E0ADF73");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.Account", b =>
                {
                    b.HasOne("FINAL_INTERN.Models.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Accounts__Role_I__398D8EEE");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.CarInfo", b =>
                {
                    b.HasOne("FINAL_INTERN.Models.Models.CategoriesOfCar", "CategoriesOfCar")
                        .WithMany("CarInfos")
                        .HasForeignKey("CategoriesOfCarId")
                        .HasConstraintName("FK__CarInfos__Catego__3F466844");

                    b.Navigation("CategoriesOfCar");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.Order", b =>
                {
                    b.HasOne("FINAL_INTERN.Models.Models.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Orders__Account___4222D4EF");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.OrderDetail", b =>
                {
                    b.HasOne("FINAL_INTERN.Models.Models.Account", "Account")
                        .WithMany("OrderDetails")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__OrderDeta__Accou__45F365D3");

                    b.HasOne("FINAL_INTERN.Models.Models.CarInfo", "Car")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CarId")
                        .HasConstraintName("FK__OrderDeta__Car_I__46E78A0C");

                    b.HasOne("FINAL_INTERN.Models.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderDeta__Order__44FF419A");

                    b.Navigation("Account");

                    b.Navigation("Car");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.Account", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.CarInfo", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.CategoriesOfCar", b =>
                {
                    b.Navigation("CarInfos");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FINAL_INTERN.Models.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
